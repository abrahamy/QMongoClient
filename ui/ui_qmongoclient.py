# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'qmongoclient.ui'
#
# Created: Mon Feb 11 20:50:48 2013
#      by: pyside-uic 0.2.13 running on PySide 1.1.1
#
# WARNING! All changes made in this file will be lost!

from PySide import QtCore, QtGui

class Ui_QMongoClient(object):
    def setupUi(self, QMongoClient):
        QMongoClient.setObjectName("QMongoClient")
        QMongoClient.resize(875, 592)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/Images/mongodb-logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        QMongoClient.setWindowIcon(icon)
        self.centralwidget = QtGui.QWidget(QMongoClient)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtGui.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.stackedWidgetContentPane = QtGui.QStackedWidget(self.centralwidget)
        self.stackedWidgetContentPane.setMinimumSize(QtCore.QSize(520, 0))
        self.stackedWidgetContentPane.setObjectName("stackedWidgetContentPane")
        self.defaultPage = QtGui.QWidget()
        self.defaultPage.setObjectName("defaultPage")
        self.horizontalLayout_3 = QtGui.QHBoxLayout(self.defaultPage)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.tabWidget = QtGui.QTabWidget(self.defaultPage)
        self.tabWidget.setObjectName("tabWidget")
        self.tabTreeView = QtGui.QWidget()
        self.tabTreeView.setStyleSheet("background-color: rgb(87, 170, 170);")
        self.tabTreeView.setObjectName("tabTreeView")
        self.horizontalLayout_4 = QtGui.QHBoxLayout(self.tabTreeView)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.treeView = QtGui.QTreeView(self.tabTreeView)
        self.treeView.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.treeView.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
        self.treeView.setObjectName("treeView")
        self.horizontalLayout_4.addWidget(self.treeView)
        self.tabWidget.addTab(self.tabTreeView, "")
        self.tabTableView = QtGui.QWidget()
        self.tabTableView.setStyleSheet("background-color: rgb(255, 213, 192);")
        self.tabTableView.setObjectName("tabTableView")
        self.horizontalLayout_5 = QtGui.QHBoxLayout(self.tabTableView)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.tableWidget = QtGui.QTableWidget(self.tabTableView)
        self.tableWidget.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tableWidget.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.horizontalLayout_5.addWidget(self.tableWidget)
        self.tabWidget.addTab(self.tabTableView, "")
        self.tabTextView = QtGui.QWidget()
        self.tabTextView.setStyleSheet("background-color: rgb(255, 169, 225);")
        self.tabTextView.setObjectName("tabTextView")
        self.horizontalLayout_7 = QtGui.QHBoxLayout(self.tabTextView)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.verticalLayout_2 = QtGui.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_6 = QtGui.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label = QtGui.QLabel(self.tabTextView)
        self.label.setObjectName("label")
        self.horizontalLayout_6.addWidget(self.label)
        spacerItem = QtGui.QSpacerItem(208, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem)
        self.pushButton = QtGui.QPushButton(self.tabTextView)
        font = QtGui.QFont()
        font.setUnderline(True)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("color: rgb(0, 85, 255);")
        self.pushButton.setFlat(True)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_6.addWidget(self.pushButton)
        self.verticalLayout_2.addLayout(self.horizontalLayout_6)
        self.textEdit = QtGui.QTextEdit(self.tabTextView)
        self.textEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.textEdit.setObjectName("textEdit")
        self.verticalLayout_2.addWidget(self.textEdit)
        self.horizontalLayout_7.addLayout(self.verticalLayout_2)
        self.tabWidget.addTab(self.tabTextView, "")
        self.horizontalLayout_3.addWidget(self.tabWidget)
        self.stackedWidgetContentPane.addWidget(self.defaultPage)
        self.page_2 = QtGui.QWidget()
        self.page_2.setObjectName("page_2")
        self.stackedWidgetContentPane.addWidget(self.page_2)
        self.horizontalLayout.addWidget(self.stackedWidgetContentPane)
        QMongoClient.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(QMongoClient)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 875, 20))
        self.menubar.setObjectName("menubar")
        self.menu_File = QtGui.QMenu(self.menubar)
        self.menu_File.setObjectName("menu_File")
        self.menu_Server = QtGui.QMenu(self.menubar)
        self.menu_Server.setObjectName("menu_Server")
        self.menu_Database = QtGui.QMenu(self.menubar)
        self.menu_Database.setObjectName("menu_Database")
        self.menuImport = QtGui.QMenu(self.menu_Database)
        self.menuImport.setObjectName("menuImport")
        self.menu_Collection = QtGui.QMenu(self.menubar)
        self.menu_Collection.setObjectName("menu_Collection")
        self.menu_Index = QtGui.QMenu(self.menubar)
        self.menu_Index.setObjectName("menu_Index")
        self.menu_Tools = QtGui.QMenu(self.menubar)
        self.menu_Tools.setObjectName("menu_Tools")
        self.menu_JavaScript = QtGui.QMenu(self.menubar)
        self.menu_JavaScript.setObjectName("menu_JavaScript")
        self.menu_Windows = QtGui.QMenu(self.menubar)
        self.menu_Windows.setObjectName("menu_Windows")
        self.menu_Help = QtGui.QMenu(self.menubar)
        self.menu_Help.setObjectName("menu_Help")
        QMongoClient.setMenuBar(self.menubar)
        self.statusbar = QtGui.QStatusBar(QMongoClient)
        self.statusbar.setObjectName("statusbar")
        QMongoClient.setStatusBar(self.statusbar)
        self.toolBar = QtGui.QToolBar(QMongoClient)
        self.toolBar.setMovable(False)
        self.toolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea)
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.toolBar.setObjectName("toolBar")
        QMongoClient.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.dockWidgetDBExplorer = QtGui.QDockWidget(QMongoClient)
        self.dockWidgetDBExplorer.setMinimumSize(QtCore.QSize(220, 359))
        self.dockWidgetDBExplorer.setFeatures(QtGui.QDockWidget.DockWidgetFloatable|QtGui.QDockWidget.DockWidgetMovable)
        self.dockWidgetDBExplorer.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.dockWidgetDBExplorer.setObjectName("dockWidgetDBExplorer")
        self.dockWidgetContents_4 = QtGui.QWidget()
        self.dockWidgetContents_4.setObjectName("dockWidgetContents_4")
        self.verticalLayout = QtGui.QVBoxLayout(self.dockWidgetContents_4)
        self.verticalLayout.setObjectName("verticalLayout")
        self.treeWidget = QtGui.QTreeWidget(self.dockWidgetContents_4)
        self.treeWidget.setMinimumSize(QtCore.QSize(0, 320))
        self.treeWidget.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
        self.treeWidget.setObjectName("treeWidget")
        self.verticalLayout.addWidget(self.treeWidget)
        self.dockWidgetDBExplorer.setWidget(self.dockWidgetContents_4)
        QMongoClient.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockWidgetDBExplorer)
        self.dockWidgetShellView = QtGui.QDockWidget(QMongoClient)
        self.dockWidgetShellView.setMinimumSize(QtCore.QSize(88, 120))
        self.dockWidgetShellView.setMaximumSize(QtCore.QSize(524287, 120))
        self.dockWidgetShellView.setFeatures(QtGui.QDockWidget.DockWidgetFloatable|QtGui.QDockWidget.DockWidgetMovable)
        self.dockWidgetShellView.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea)
        self.dockWidgetShellView.setObjectName("dockWidgetShellView")
        self.dockWidgetContents_5 = QtGui.QWidget()
        self.dockWidgetContents_5.setObjectName("dockWidgetContents_5")
        self.horizontalLayout_2 = QtGui.QHBoxLayout(self.dockWidgetContents_5)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.textEditShellCommands = QtGui.QTextEdit(self.dockWidgetContents_5)
        self.textEditShellCommands.setReadOnly(True)
        self.textEditShellCommands.setObjectName("textEditShellCommands")
        self.horizontalLayout_2.addWidget(self.textEditShellCommands)
        self.dockWidgetShellView.setWidget(self.dockWidgetContents_5)
        QMongoClient.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dockWidgetShellView)
        self.actionFileConnect = QtGui.QAction(QMongoClient)
        self.actionFileConnect.setObjectName("actionFileConnect")
        self.actionFileExit = QtGui.QAction(QMongoClient)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/Images/quit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFileExit.setIcon(icon1)
        self.actionFileExit.setObjectName("actionFileExit")
        self.actionServerOverview = QtGui.QAction(QMongoClient)
        self.actionServerOverview.setObjectName("actionServerOverview")
        self.actionServerAddDatabase = QtGui.QAction(QMongoClient)
        self.actionServerAddDatabase.setObjectName("actionServerAddDatabase")
        self.actionServerDisconnect = QtGui.QAction(QMongoClient)
        self.actionServerDisconnect.setObjectName("actionServerDisconnect")
        self.actionServerStatus = QtGui.QAction(QMongoClient)
        self.actionServerStatus.setObjectName("actionServerStatus")
        self.actionDBOverview = QtGui.QAction(QMongoClient)
        self.actionDBOverview.setObjectName("actionDBOverview")
        self.actionDBProfilingLevel = QtGui.QAction(QMongoClient)
        self.actionDBProfilingLevel.setObjectName("actionDBProfilingLevel")
        self.actionDBAddCollection = QtGui.QAction(QMongoClient)
        self.actionDBAddCollection.setObjectName("actionDBAddCollection")
        self.actionDBAddStoredJavaScript = QtGui.QAction(QMongoClient)
        self.actionDBAddStoredJavaScript.setObjectName("actionDBAddStoredJavaScript")
        self.actionDBImportFromMySQL = QtGui.QAction(QMongoClient)
        self.actionDBImportFromMySQL.setObjectName("actionDBImportFromMySQL")
        self.actionDBImportFromMicrosoftSQLServer = QtGui.QAction(QMongoClient)
        self.actionDBImportFromMicrosoftSQLServer.setObjectName("actionDBImportFromMicrosoftSQLServer")
        self.actionDBImportFromPostgreSQL = QtGui.QAction(QMongoClient)
        self.actionDBImportFromPostgreSQL.setObjectName("actionDBImportFromPostgreSQL")
        self.actionDBCopyCollectionsToDifferentServer = QtGui.QAction(QMongoClient)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/Images/copy.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDBCopyCollectionsToDifferentServer.setIcon(icon2)
        self.actionDBCopyCollectionsToDifferentServer.setObjectName("actionDBCopyCollectionsToDifferentServer")
        self.actionDBDrop = QtGui.QAction(QMongoClient)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/Images/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDBDrop.setIcon(icon3)
        self.actionDBDrop.setObjectName("actionDBDrop")
        self.actionDBStats = QtGui.QAction(QMongoClient)
        self.actionDBStats.setObjectName("actionDBStats")
        self.actionCollectionView = QtGui.QAction(QMongoClient)
        self.actionCollectionView.setObjectName("actionCollectionView")
        self.actionCollectionFind = QtGui.QAction(QMongoClient)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/Images/find.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCollectionFind.setIcon(icon4)
        self.actionCollectionFind.setObjectName("actionCollectionFind")
        self.actionCollectionFind2 = QtGui.QAction(QMongoClient)
        self.actionCollectionFind2.setIcon(icon4)
        self.actionCollectionFind2.setObjectName("actionCollectionFind2")
        self.actionCollectionUpdate = QtGui.QAction(QMongoClient)
        self.actionCollectionUpdate.setObjectName("actionCollectionUpdate")
        self.actionCollectionGroup = QtGui.QAction(QMongoClient)
        self.actionCollectionGroup.setObjectName("actionCollectionGroup")
        self.actionCollectionMapReduce = QtGui.QAction(QMongoClient)
        self.actionCollectionMapReduce.setObjectName("actionCollectionMapReduce")
        self.actionCollectionRemove = QtGui.QAction(QMongoClient)
        self.actionCollectionRemove.setIcon(icon3)
        self.actionCollectionRemove.setObjectName("actionCollectionRemove")
        self.actionCollectionInsertDocument = QtGui.QAction(QMongoClient)
        self.actionCollectionInsertDocument.setObjectName("actionCollectionInsertDocument")
        self.actionCollectionAddIndex = QtGui.QAction(QMongoClient)
        self.actionCollectionAddIndex.setObjectName("actionCollectionAddIndex")
        self.actionCollectionCompact = QtGui.QAction(QMongoClient)
        self.actionCollectionCompact.setObjectName("actionCollectionCompact")
        self.actionCollectionDuplicate = QtGui.QAction(QMongoClient)
        self.actionCollectionDuplicate.setIcon(icon2)
        self.actionCollectionDuplicate.setObjectName("actionCollectionDuplicate")
        self.actionCollectionCopyToDifferentServer = QtGui.QAction(QMongoClient)
        self.actionCollectionCopyToDifferentServer.setIcon(icon2)
        self.actionCollectionCopyToDifferentServer.setObjectName("actionCollectionCopyToDifferentServer")
        self.actionCollectionRemoveAll = QtGui.QAction(QMongoClient)
        self.actionCollectionRemoveAll.setIcon(icon3)
        self.actionCollectionRemoveAll.setObjectName("actionCollectionRemoveAll")
        self.actionCollectionDrop = QtGui.QAction(QMongoClient)
        self.actionCollectionDrop.setIcon(icon3)
        self.actionCollectionDrop.setObjectName("actionCollectionDrop")
        self.actionCollectionStats = QtGui.QAction(QMongoClient)
        self.actionCollectionStats.setObjectName("actionCollectionStats")
        self.actionIndexDrop = QtGui.QAction(QMongoClient)
        self.actionIndexDrop.setIcon(icon3)
        self.actionIndexDrop.setObjectName("actionIndexDrop")
        self.actionIndexProperties = QtGui.QAction(QMongoClient)
        self.actionIndexProperties.setObjectName("actionIndexProperties")
        self.actionJavaScriptEdit = QtGui.QAction(QMongoClient)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/Images/editedit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionJavaScriptEdit.setIcon(icon5)
        self.actionJavaScriptEdit.setObjectName("actionJavaScriptEdit")
        self.actionJavaScriptDrop = QtGui.QAction(QMongoClient)
        self.actionJavaScriptDrop.setIcon(icon3)
        self.actionJavaScriptDrop.setObjectName("actionJavaScriptDrop")
        self.actionToolsServerMonitoring = QtGui.QAction(QMongoClient)
        self.actionToolsServerMonitoring.setObjectName("actionToolsServerMonitoring")
        self.actionToolsPreferences = QtGui.QAction(QMongoClient)
        self.actionToolsPreferences.setObjectName("actionToolsPreferences")
        self.actionWindowsClose = QtGui.QAction(QMongoClient)
        self.actionWindowsClose.setObjectName("actionWindowsClose")
        self.actionWindowsCloseAll = QtGui.QAction(QMongoClient)
        self.actionWindowsCloseAll.setObjectName("actionWindowsCloseAll")
        self.actionHelpAbout = QtGui.QAction(QMongoClient)
        self.actionHelpAbout.setObjectName("actionHelpAbout")
        self.actionOpen = QtGui.QAction(QMongoClient)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/Images/fileopen.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon6)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtGui.QAction(QMongoClient)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/Images/filesave.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon7)
        self.actionSave.setObjectName("actionSave")
        self.actionSaveAs = QtGui.QAction(QMongoClient)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/Images/filesaveas.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSaveAs.setIcon(icon8)
        self.actionSaveAs.setObjectName("actionSaveAs")
        self.actionJavaScript = QtGui.QAction(QMongoClient)
        self.actionJavaScript.setObjectName("actionJavaScript")
        self.menu_File.addAction(self.actionFileConnect)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.actionFileExit)
        self.menu_Server.addAction(self.actionServerOverview)
        self.menu_Server.addSeparator()
        self.menu_Server.addAction(self.actionServerAddDatabase)
        self.menu_Server.addSeparator()
        self.menu_Server.addAction(self.actionServerDisconnect)
        self.menu_Server.addAction(self.actionServerStatus)
        self.menuImport.addAction(self.actionDBImportFromMySQL)
        self.menuImport.addAction(self.actionDBImportFromMicrosoftSQLServer)
        self.menuImport.addAction(self.actionDBImportFromPostgreSQL)
        self.menu_Database.addAction(self.actionDBOverview)
        self.menu_Database.addAction(self.actionDBProfilingLevel)
        self.menu_Database.addSeparator()
        self.menu_Database.addAction(self.actionDBAddCollection)
        self.menu_Database.addAction(self.actionDBAddStoredJavaScript)
        self.menu_Database.addSeparator()
        self.menu_Database.addAction(self.menuImport.menuAction())
        self.menu_Database.addAction(self.actionDBCopyCollectionsToDifferentServer)
        self.menu_Database.addSeparator()
        self.menu_Database.addAction(self.actionDBDrop)
        self.menu_Database.addAction(self.actionDBStats)
        self.menu_Collection.addAction(self.actionCollectionView)
        self.menu_Collection.addAction(self.actionCollectionFind)
        self.menu_Collection.addAction(self.actionCollectionFind2)
        self.menu_Collection.addAction(self.actionCollectionUpdate)
        self.menu_Collection.addAction(self.actionCollectionRemove)
        self.menu_Collection.addAction(self.actionCollectionGroup)
        self.menu_Collection.addAction(self.actionCollectionMapReduce)
        self.menu_Collection.addSeparator()
        self.menu_Collection.addAction(self.actionCollectionInsertDocument)
        self.menu_Collection.addAction(self.actionCollectionAddIndex)
        self.menu_Collection.addAction(self.actionCollectionCompact)
        self.menu_Collection.addSeparator()
        self.menu_Collection.addAction(self.actionCollectionDuplicate)
        self.menu_Collection.addAction(self.actionCollectionCopyToDifferentServer)
        self.menu_Collection.addSeparator()
        self.menu_Collection.addAction(self.actionCollectionRemoveAll)
        self.menu_Collection.addAction(self.actionCollectionDrop)
        self.menu_Collection.addAction(self.actionCollectionStats)
        self.menu_Index.addAction(self.actionIndexDrop)
        self.menu_Index.addAction(self.actionIndexProperties)
        self.menu_Tools.addAction(self.actionToolsServerMonitoring)
        self.menu_Tools.addSeparator()
        self.menu_Tools.addAction(self.actionToolsPreferences)
        self.menu_JavaScript.addAction(self.actionJavaScriptEdit)
        self.menu_JavaScript.addAction(self.actionJavaScriptDrop)
        self.menu_Windows.addAction(self.actionWindowsClose)
        self.menu_Windows.addAction(self.actionWindowsCloseAll)
        self.menu_Help.addAction(self.actionHelpAbout)
        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menu_Server.menuAction())
        self.menubar.addAction(self.menu_Database.menuAction())
        self.menubar.addAction(self.menu_Collection.menuAction())
        self.menubar.addAction(self.menu_Index.menuAction())
        self.menubar.addAction(self.menu_JavaScript.menuAction())
        self.menubar.addAction(self.menu_Tools.menuAction())
        self.menubar.addAction(self.menu_Windows.menuAction())
        self.menubar.addAction(self.menu_Help.menuAction())
        self.toolBar.addAction(self.actionOpen)
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addAction(self.actionSaveAs)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionCollectionView)
        self.toolBar.addAction(self.actionCollectionFind)
        self.toolBar.addAction(self.actionCollectionFind2)
        self.toolBar.addAction(self.actionCollectionUpdate)
        self.toolBar.addAction(self.actionCollectionRemove)
        self.toolBar.addAction(self.actionCollectionMapReduce)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionJavaScript)

        self.retranslateUi(QMongoClient)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QObject.connect(self.actionFileExit, QtCore.SIGNAL("triggered()"), QMongoClient.close)
        QtCore.QMetaObject.connectSlotsByName(QMongoClient)

    def retranslateUi(self, QMongoClient):
        QMongoClient.setWindowTitle(QtGui.QApplication.translate("QMongoClient", "QMongoClient", None, QtGui.QApplication.UnicodeUTF8))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabTreeView), QtGui.QApplication.translate("QMongoClient", "Tree View", None, QtGui.QApplication.UnicodeUTF8))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabTableView), QtGui.QApplication.translate("QMongoClient", "Table View", None, QtGui.QApplication.UnicodeUTF8))
        self.label.setText(QtGui.QApplication.translate("QMongoClient", "Json Text of Resulting Documents:", None, QtGui.QApplication.UnicodeUTF8))
        self.pushButton.setText(QtGui.QApplication.translate("QMongoClient", "Open in Native Editor", None, QtGui.QApplication.UnicodeUTF8))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabTextView), QtGui.QApplication.translate("QMongoClient", "Text View", None, QtGui.QApplication.UnicodeUTF8))
        self.menu_File.setTitle(QtGui.QApplication.translate("QMongoClient", "&File", None, QtGui.QApplication.UnicodeUTF8))
        self.menu_Server.setTitle(QtGui.QApplication.translate("QMongoClient", "&Server", None, QtGui.QApplication.UnicodeUTF8))
        self.menu_Database.setTitle(QtGui.QApplication.translate("QMongoClient", "&Database", None, QtGui.QApplication.UnicodeUTF8))
        self.menuImport.setTitle(QtGui.QApplication.translate("QMongoClient", "Import", None, QtGui.QApplication.UnicodeUTF8))
        self.menu_Collection.setTitle(QtGui.QApplication.translate("QMongoClient", "&Collection", None, QtGui.QApplication.UnicodeUTF8))
        self.menu_Index.setTitle(QtGui.QApplication.translate("QMongoClient", "&Index", None, QtGui.QApplication.UnicodeUTF8))
        self.menu_Tools.setTitle(QtGui.QApplication.translate("QMongoClient", "&Tools", None, QtGui.QApplication.UnicodeUTF8))
        self.menu_JavaScript.setTitle(QtGui.QApplication.translate("QMongoClient", "&JavaScript", None, QtGui.QApplication.UnicodeUTF8))
        self.menu_Windows.setTitle(QtGui.QApplication.translate("QMongoClient", "&Windows", None, QtGui.QApplication.UnicodeUTF8))
        self.menu_Help.setTitle(QtGui.QApplication.translate("QMongoClient", "&Help", None, QtGui.QApplication.UnicodeUTF8))
        self.toolBar.setWindowTitle(QtGui.QApplication.translate("QMongoClient", "toolBar", None, QtGui.QApplication.UnicodeUTF8))
        self.dockWidgetDBExplorer.setWindowTitle(QtGui.QApplication.translate("QMongoClient", "Database Explorer", None, QtGui.QApplication.UnicodeUTF8))
        self.treeWidget.headerItem().setText(0, QtGui.QApplication.translate("QMongoClient", "Connect", None, QtGui.QApplication.UnicodeUTF8))
        self.treeWidget.headerItem().setText(1, QtGui.QApplication.translate("QMongoClient", "Refresh", None, QtGui.QApplication.UnicodeUTF8))
        self.dockWidgetShellView.setWindowTitle(QtGui.QApplication.translate("QMongoClient", "Learn Shell", None, QtGui.QApplication.UnicodeUTF8))
        self.actionFileConnect.setText(QtGui.QApplication.translate("QMongoClient", "Connect", None, QtGui.QApplication.UnicodeUTF8))
        self.actionFileExit.setText(QtGui.QApplication.translate("QMongoClient", "E&xit", None, QtGui.QApplication.UnicodeUTF8))
        self.actionServerOverview.setText(QtGui.QApplication.translate("QMongoClient", "Overview", None, QtGui.QApplication.UnicodeUTF8))
        self.actionServerAddDatabase.setText(QtGui.QApplication.translate("QMongoClient", "Add Database...", None, QtGui.QApplication.UnicodeUTF8))
        self.actionServerDisconnect.setText(QtGui.QApplication.translate("QMongoClient", "Disconnect", None, QtGui.QApplication.UnicodeUTF8))
        self.actionServerStatus.setText(QtGui.QApplication.translate("QMongoClient", "Status", None, QtGui.QApplication.UnicodeUTF8))
        self.actionDBOverview.setText(QtGui.QApplication.translate("QMongoClient", "Overview", None, QtGui.QApplication.UnicodeUTF8))
        self.actionDBProfilingLevel.setText(QtGui.QApplication.translate("QMongoClient", "Profiling Level", None, QtGui.QApplication.UnicodeUTF8))
        self.actionDBAddCollection.setText(QtGui.QApplication.translate("QMongoClient", "Add Collection...", None, QtGui.QApplication.UnicodeUTF8))
        self.actionDBAddStoredJavaScript.setText(QtGui.QApplication.translate("QMongoClient", "Add Stored JavaScript...", None, QtGui.QApplication.UnicodeUTF8))
        self.actionDBImportFromMySQL.setText(QtGui.QApplication.translate("QMongoClient", "From MySQL", None, QtGui.QApplication.UnicodeUTF8))
        self.actionDBImportFromMicrosoftSQLServer.setText(QtGui.QApplication.translate("QMongoClient", "From Microsoft SQL Server", None, QtGui.QApplication.UnicodeUTF8))
        self.actionDBImportFromPostgreSQL.setText(QtGui.QApplication.translate("QMongoClient", "From PostgreSQL", None, QtGui.QApplication.UnicodeUTF8))
        self.actionDBCopyCollectionsToDifferentServer.setText(QtGui.QApplication.translate("QMongoClient", "Copy Collections to Different Server...", None, QtGui.QApplication.UnicodeUTF8))
        self.actionDBDrop.setText(QtGui.QApplication.translate("QMongoClient", "Drop", None, QtGui.QApplication.UnicodeUTF8))
        self.actionDBStats.setText(QtGui.QApplication.translate("QMongoClient", "Stats", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionView.setText(QtGui.QApplication.translate("QMongoClient", "View", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionFind.setText(QtGui.QApplication.translate("QMongoClient", "Find", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionFind2.setText(QtGui.QApplication.translate("QMongoClient", "Find 2", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionUpdate.setText(QtGui.QApplication.translate("QMongoClient", "Update", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionGroup.setText(QtGui.QApplication.translate("QMongoClient", "Group", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionMapReduce.setText(QtGui.QApplication.translate("QMongoClient", "Map Reduce", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionRemove.setText(QtGui.QApplication.translate("QMongoClient", "Remove", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionInsertDocument.setText(QtGui.QApplication.translate("QMongoClient", "Insert Document...", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionAddIndex.setText(QtGui.QApplication.translate("QMongoClient", "Add Index...", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionCompact.setText(QtGui.QApplication.translate("QMongoClient", "Compact", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionDuplicate.setText(QtGui.QApplication.translate("QMongoClient", "Duplicate Collection...", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionCopyToDifferentServer.setText(QtGui.QApplication.translate("QMongoClient", "Copy Collection to Different Server...", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionRemoveAll.setText(QtGui.QApplication.translate("QMongoClient", "Remove All", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionDrop.setText(QtGui.QApplication.translate("QMongoClient", "Drop", None, QtGui.QApplication.UnicodeUTF8))
        self.actionCollectionStats.setText(QtGui.QApplication.translate("QMongoClient", "Stats", None, QtGui.QApplication.UnicodeUTF8))
        self.actionIndexDrop.setText(QtGui.QApplication.translate("QMongoClient", "Drop", None, QtGui.QApplication.UnicodeUTF8))
        self.actionIndexProperties.setText(QtGui.QApplication.translate("QMongoClient", "Properties", None, QtGui.QApplication.UnicodeUTF8))
        self.actionJavaScriptEdit.setText(QtGui.QApplication.translate("QMongoClient", "Edit", None, QtGui.QApplication.UnicodeUTF8))
        self.actionJavaScriptDrop.setText(QtGui.QApplication.translate("QMongoClient", "Drop", None, QtGui.QApplication.UnicodeUTF8))
        self.actionToolsServerMonitoring.setText(QtGui.QApplication.translate("QMongoClient", "Server Monitoring", None, QtGui.QApplication.UnicodeUTF8))
        self.actionToolsPreferences.setText(QtGui.QApplication.translate("QMongoClient", "Preferences", None, QtGui.QApplication.UnicodeUTF8))
        self.actionWindowsClose.setText(QtGui.QApplication.translate("QMongoClient", "Close", None, QtGui.QApplication.UnicodeUTF8))
        self.actionWindowsCloseAll.setText(QtGui.QApplication.translate("QMongoClient", "Close All", None, QtGui.QApplication.UnicodeUTF8))
        self.actionHelpAbout.setText(QtGui.QApplication.translate("QMongoClient", "About", None, QtGui.QApplication.UnicodeUTF8))
        self.actionOpen.setText(QtGui.QApplication.translate("QMongoClient", "Open", None, QtGui.QApplication.UnicodeUTF8))
        self.actionOpen.setToolTip(QtGui.QApplication.translate("QMongoClient", "Open", None, QtGui.QApplication.UnicodeUTF8))
        self.actionSave.setText(QtGui.QApplication.translate("QMongoClient", "Save", None, QtGui.QApplication.UnicodeUTF8))
        self.actionSave.setToolTip(QtGui.QApplication.translate("QMongoClient", "Save", None, QtGui.QApplication.UnicodeUTF8))
        self.actionSaveAs.setText(QtGui.QApplication.translate("QMongoClient", "Save As...", None, QtGui.QApplication.UnicodeUTF8))
        self.actionSaveAs.setToolTip(QtGui.QApplication.translate("QMongoClient", "Save As...", None, QtGui.QApplication.UnicodeUTF8))
        self.actionJavaScript.setText(QtGui.QApplication.translate("QMongoClient", "JavaScript", None, QtGui.QApplication.UnicodeUTF8))
        self.actionJavaScript.setToolTip(QtGui.QApplication.translate("QMongoClient", "JavaScript", None, QtGui.QApplication.UnicodeUTF8))

import resources_rc
